{"version":3,"file":"file-upload-control.min.js","sources":["../../src/assets/js/ui/Button.js","../../src/assets/js/ui/Buttons.js","../../src/assets/js/ui/FilesList.js","../../src/assets/js/ui/FileUpload.js","../../src/assets/js/index.js","../../src/assets/js/file-upload-control.js"],"sourcesContent":["import $ from 'jquery';\n\nclass Button {\n\n    constructor($fileUpload, buttonSelector, targetSelector) {\n        this.$fileUpload = $fileUpload;\n        this.button = $fileUpload.find(buttonSelector);\n        this.targetSelector = targetSelector;\n\n        this.button.click(() => {\n            // Trigger click from the newest to oldest to mitigate race condition bug with limitConcurrentUploads\n            $(this.$fileUpload.find(this.targetSelector).get().reverse()).click();\n        });\n    }\n\n    refreshState() {\n        this.button.toggleClass('disabled', this.$fileUpload.find(this.targetSelector).length === 0);\n    }\n\n}\n\n\nexport default Button;\n","import Button from './Button';\n\n\nclass Buttons {\n\n    constructor($fileUpload) {\n        this.abortButton = new Button($fileUpload, '[data-file-upload-role=abort]', '[data-file-upload-status=processing] [data-file-upload-role=file-delete]');\n        this.deleteButton = new Button($fileUpload, '[data-file-upload-role=delete]', '[data-file-upload-role=file-delete]');\n    }\n\n    refreshState() {\n        this.abortButton.refreshState();\n        this.deleteButton.refreshState();\n    }\n\n}\n\n\nexport default Buttons;\n","import $ from 'jquery';\n\nclass FilesList {\n\n    constructor($fileUpload) {\n        this.$fileUpload = $fileUpload;\n        this.dataAttribute = 'files';\n    }\n\n    getInput() {\n        // We need to do a lookup every time, because file input is replaced after each upload\n        return this.$fileUpload.find('input[type=file]');\n    }\n\n    list() {\n        return this.getInput().data(this.dataAttribute) || [];\n    }\n\n    add(file) {\n        const files = this.list();\n        files.push(file);\n        this.getInput().data(this.dataAttribute, files);\n    }\n\n    /**\n     * @deprecated\n     */\n    remove(fileUrl) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.url !== fileUrl;\n            },\n        ));\n    }\n\n    removeByDeleteUrl(deleteUrl) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.deleteUrl !== deleteUrl;\n            },\n        ));\n    }\n\n    removeByUid(uid) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.uid !== uid;\n            },\n        ));\n    }\n\n}\n\n\nexport default FilesList;\n","import $ from 'jquery';\nimport FilesList from './FilesList';\n\nclass FileUpload {\n\n    constructor($fileUpload, files) {\n        let name = '';\n        let size = 0;\n        let type = '';\n        $.each(files, (index, file) => {\n            name = name + (index ? ', ' : '') + file.name;\n            size = size + file.size;\n            type = type || file.type;\n            if (type !== file.type) {\n                type = type + ', ' + file.type;\n            }\n        });\n\n        this.name = name;\n        this.size = size;\n        this.type = type;\n        this.status = 'processing';\n        this.progress = 0;\n        this.deleteUrl = null;\n        this.downloadUrl = null;\n        this.thumbnailUrl = null;\n        this.error = null;\n        this.$filesContainer = $fileUpload.find('[data-file-upload-role=files]');\n        this.$file = this.createUI();\n\n        const uid = [name, size, Math.floor(Math.random() * 2**32)].join('|');\n        this.fileListItem = {name, size, type, uid};\n        this.fileList = new FilesList($fileUpload);\n        this.fileList.add(this.fileListItem);\n\n        this.updateFileInfoUI();\n        this.$filesContainer.append(this.$file);\n        this.$file.fadeIn();\n    }\n\n    createUI() {\n        const $file = $(this.$filesContainer.data('templateFile'));\n        $file.find('[data-file-upload-role=file-status]').append($(this.$filesContainer.data('templateProcessing')));\n        $file.hide();\n        return $file;\n    }\n\n    updateProgress(progress) {\n        this.progress = Math.max(0, Math.min(progress, 1)) * 100;\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfo(file) {\n        this.downloadUrl = file.url || this.downloadUrl;\n        this.thumbnailUrl = file.thumbnailUrl || this.thumbnailUrl;\n        this.deleteUrl = file.deleteUrl || this.deleteUrl;\n        this.type = file.type || this.type;\n        this.replaceFileListItem(file);\n    }\n\n    replaceFileListItem(file) {\n        if (this.fileListItem) {\n            this.fileList.removeByUid(this.fileListItem.uid);\n            this.fileList.add(file);\n            this.fileListItem = null;\n        }\n    }\n\n    processing(file) {\n        this.updateFileInfo(file);\n        this.updateFileInfoUI();\n    }\n\n    failed(file) {\n        this.status = 'failed';\n        if (file && file.error) {\n            this.error = file.error;\n        }\n        const $error = $(this.$filesContainer.data('templateFailed'));\n        this.updateFileInfoUI($error);\n        this.$file.find('[data-file-upload-role=file-status]').html($error);\n        this.updateFileInfoUI();\n        this.removeFileListItem();\n    }\n\n    aborted() {\n        this.removeFileListItem();\n    }\n\n    removeFileListItem() {\n        if (this.fileListItem) {\n            this.fileList.removeByUid(this.fileListItem.uid);\n            this.fileListItem = null;\n        }\n    }\n\n    done(file) {\n        this.status = 'done';\n        this.updateFileInfo(file);\n        const $done = $(this.$filesContainer.data('templateDone'));\n        this.updateFileInfoUI($done);\n        this.$file.find('[data-file-upload-role=file-status]').html($done);\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfoUI(element) {\n        this.$file.attr('data-file-upload-status', this.status);\n        this.$file.attr('data-content-type', this.type);\n        this.$file.attr('title', this.name);\n\n        const $element = $(element || this.$file);\n        $element.find('[data-file-upload-role=file-name]').text(this.name);\n        $element.find('[data-file-upload-role=file-size]').text(this.formatBytes(this.size));\n        $element.find('[data-file-upload-role=file-progress-bar]')\n            .attr('aria-valuenow', Math.floor(this.progress))\n            .css('width', this.progress.toFixed(2) + '%');\n        if (this.error) {\n            $element.find('[data-file-upload-role=file-error]').text(this.error);\n        }\n        if (this.deleteUrl) {\n            $element.find('[data-file-upload-role=file-delete]').attr('data-url', this.deleteUrl);\n        }\n        if (this.downloadUrl) {\n            $element.find('[data-file-upload-role=file-download]').attr('href', this.downloadUrl);\n        }\n        if (this.thumbnailUrl) {\n            const $thumbnail = $element.find('[data-file-upload-role=file-thumbnail]');\n            if ($thumbnail.is('img')) {\n                $thumbnail.attr('src', this.thumbnailUrl);\n            } else if ($thumbnail.length > 0) {\n                const thumbnailAttributes = {};\n                $.each($thumbnail.get(0).attributes, (idx, attribute) => {\n                    thumbnailAttributes[attribute.name] = attribute.value;\n                });\n                $thumbnail.replaceWith($('<img>').attr(thumbnailAttributes).attr('src', this.thumbnailUrl));\n            }\n        }\n    }\n\n    formatBytes(bytes) {\n        const units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB'];\n        let unit;\n        for (let i = 0; i < units.length; i++) {\n            unit = units[i];\n            if (Math.abs(bytes) < 1024 || i === units.length - 1) {\n                break;\n            }\n            bytes = bytes / 1024;\n        }\n        return bytes.toFixed(2) + ' ' + unit;\n    }\n\n}\n\n\nexport default FileUpload;\n","import $ from 'jquery';\nimport 'blueimp-file-upload';\nimport {Buttons, FilesList, FileUpload} from './ui';\n\n\nfunction initializeControl(container) {\n    const $fileUpload = $(container);\n    if ($fileUpload.data('blueimpFileupload')) {\n        return;\n    }\n\n    const uniqueFilenames = {};\n    ($fileUpload.data('uniqueFilenames') || []).forEach((filename) => {\n        uniqueFilenames[filename] = true;\n    });\n\n    $fileUpload.fileupload({\n        url: $fileUpload.data('fileUploadUrl'),\n        dropZone: $fileUpload,\n        pasteZone: null,\n        dataType: 'json',\n        formData: [], // do not send other form data with file uploads\n        uniqueFilenames,\n        singleFileUploads: true,\n        maxChunkSize: 2 * 1024 * 1024,\n        limitConcurrentUploads: 3,\n        submit: () => {\n            return !$fileUpload.hasClass('disabled') && !$fileUpload.is(':disabled') && !$fileUpload.find('input[type=file]').prop('disabled');\n        },\n    });\n\n    const filesList = new FilesList($fileUpload);\n    const buttons = new Buttons($fileUpload);\n\n    // eslint-disable-next-line consistent-return\n    $fileUpload.on('fileuploadadd', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload = new FileUpload($fileUpload, data.files);\n        data.fileUpload.$file.data('upload', data);\n        buttons.refreshState();\n\n    // eslint-disable-next-line consistent-return\n    }).on('fileuploadprogress', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload.updateProgress(data.loaded / data.total);\n\n    }).on('fileuploadfail', (e, data) => {\n        if (!data.fileUpload) {\n            return;\n        }\n        if (data.errorThrown === 'abort') {\n            data.fileUpload.aborted();\n        } else {\n            data.fileUpload.failed();\n            buttons.refreshState();\n        }\n\n    }).on('fileuploaddone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n        } else {\n            data.fileUpload.done(file);\n        }\n        buttons.refreshState();\n\n    }).on('fileuploadchunkdone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n            buttons.refreshState();\n        } else {\n            data.fileUpload.processing(file);\n        }\n\n    }).on('fileuploadchunksend', (e, data) => {\n        return !data.fileUpload || data.fileUpload.status !== 'failed';\n\n    }).on('click', '[data-file-upload-role=file-delete]', function () {\n        const $this = $(this);\n        const $file = $this.closest('[data-file-upload-role=file]');\n        const upload = $file.data('upload');\n        if (upload) {\n            upload.abort();\n        }\n        const deleteUrl = $this.data('url');\n        if (deleteUrl) {\n            $.get(deleteUrl);\n            filesList.removeByDeleteUrl(deleteUrl);\n        }\n        $file.fadeOut(() => {\n            $file.remove();\n            buttons.refreshState();\n        });\n\n    });\n}\n\n\nfunction initializeForm(form) {\n    $(form)\n        .find('[data-file-upload-url]')\n        .each((idx, container) => {\n            initializeControl(container);\n        });\n}\n\n\nfunction initializeFileUploadControl(Nette) {\n    // Disable default browser drop event\n    $(document).on('drop dragover', (e) => {\n        e.preventDefault();\n    });\n\n    // Validation\n    Nette.validators.NepadaFileUploadControlValidationClientSide_noUploadInProgress = (element) => {\n        return $(element).closest('[data-file-upload-url]').find('[data-file-upload-status=processing] [data-file-upload-role=file-delete]').length === 0;\n    };\n\n    // Effective value\n    const originalGetEffectiveValue = Nette.getEffectiveValue;\n    Nette.getEffectiveValue = (elem, filter) => {\n        if (!elem || !elem.nodeName || elem.nodeName.toLowerCase() !== 'input' || !$(elem).data('files')) {\n            return originalGetEffectiveValue.apply(Nette, [elem, filter]);\n        }\n        return $(elem).data('files');\n    };\n\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm.apply(Nette, [form]);\n        initializeForm(form);\n    };\n}\n\n\nexport default initializeFileUploadControl;\n","import Nette from 'nette-forms';\nimport initializeFileUploadControl from './index';\n\ninitializeFileUploadControl(Nette);\n"],"names":["Button","constructor","$fileUpload","buttonSelector","targetSelector","this","button","find","click","$","get","reverse","refreshState","toggleClass","length","Buttons","abortButton","deleteButton","FilesList","dataAttribute","getInput","list","data","add","file","files","push","remove","fileUrl","grep","url","removeByDeleteUrl","deleteUrl","removeByUid","uid","FileUpload","name","size","type","each","index","status","progress","downloadUrl","thumbnailUrl","error","$filesContainer","$file","createUI","Math","floor","random","join","fileListItem","fileList","updateFileInfoUI","append","fadeIn","hide","updateProgress","max","min","updateFileInfo","replaceFileListItem","processing","failed","$error","html","removeFileListItem","aborted","done","$done","element","attr","$element","text","formatBytes","css","toFixed","$thumbnail","is","thumbnailAttributes","attributes","idx","attribute","value","replaceWith","bytes","unit","units","i","abs","initializeForm","form","container","uniqueFilenames","forEach","filename","fileupload","dropZone","pasteZone","dataType","formData","singleFileUploads","maxChunkSize","limitConcurrentUploads","submit","hasClass","prop","filesList","buttons","on","e","isDefaultPrevented","fileUpload","loaded","total","errorThrown","result","$this","closest","upload","abort","fadeOut","initializeControl","Nette","document","preventDefault","validators","NepadaFileUploadControlValidationClientSide_noUploadInProgress","originalGetEffectiveValue","getEffectiveValue","elem","filter","nodeName","toLowerCase","apply","originalInitForm","initForm","initializeFileUploadControl"],"mappings":"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"}