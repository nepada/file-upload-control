{"version":3,"file":"file-upload-control.min.js","sources":["../../src/assets/js/ui/Button.js","../../src/assets/js/ui/Buttons.js","../../src/assets/js/ui/FilesList.js","../../src/assets/js/ui/FileUpload.js","../../src/assets/js/index.js","../../src/assets/js/file-upload-control.js"],"sourcesContent":["import $ from 'jquery';\n\nclass Button {\n\n    constructor($fileUpload, buttonSelector, targetSelector) {\n        this.$fileUpload = $fileUpload;\n        this.button = $fileUpload.find(buttonSelector);\n        this.targetSelector = targetSelector;\n\n        this.button.click(() => {\n            // Trigger click from the newest to oldest to mitigate race condition bug with limitConcurrentUploads\n            $(this.$fileUpload.find(this.targetSelector).get().reverse()).click();\n        });\n    }\n\n    refreshState() {\n        this.button.toggleClass('disabled', this.$fileUpload.find(this.targetSelector).length === 0);\n    }\n\n}\n\n\nexport default Button;\n","import Button from './Button';\n\n\nclass Buttons {\n\n    constructor($fileUpload) {\n        this.abortButton = new Button($fileUpload, '[data-file-upload-role=abort]', '[data-file-upload-status=processing] [data-file-upload-role=file-delete]');\n        this.deleteButton = new Button($fileUpload, '[data-file-upload-role=delete]', '[data-file-upload-role=file-delete]');\n    }\n\n    refreshState() {\n        this.abortButton.refreshState();\n        this.deleteButton.refreshState();\n    }\n\n}\n\n\nexport default Buttons;\n","import $ from 'jquery';\n\nclass FilesList {\n\n    constructor($fileUpload) {\n        this.$fileUpload = $fileUpload;\n        this.dataAttribute = 'files';\n    }\n\n    getInput() {\n        // We need to do a lookup every time, because file input is replaced after each upload\n        return this.$fileUpload.find('input[type=file]');\n    }\n\n    list() {\n        return this.getInput().data(this.dataAttribute) || [];\n    }\n\n    add(file) {\n        const files = this.list();\n        files.push(file);\n        this.getInput().data(this.dataAttribute, files);\n    }\n\n    /**\n     * @deprecated\n     */\n    remove(fileUrl) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.url !== fileUrl;\n            },\n        ));\n    }\n\n    removeByDeleteUrl(deleteUrl) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.deleteUrl !== deleteUrl;\n            },\n        ));\n    }\n\n    removeByUid(uid) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.uid !== uid;\n            },\n        ));\n    }\n\n}\n\n\nexport default FilesList;\n","import $ from 'jquery';\nimport FilesList from './FilesList';\n\nclass FileUpload {\n\n    constructor($fileUpload, files) {\n        let name = '';\n        let size = 0;\n        let type = '';\n        $.each(files, (index, file) => {\n            name = name + (index ? ', ' : '') + file.name;\n            size = size + file.size;\n            type = type || file.type;\n            if (type !== file.type) {\n                type = type + ', ' + file.type;\n            }\n        });\n\n        this.name = name;\n        this.size = size;\n        this.type = type;\n        this.status = 'processing';\n        this.progress = 0;\n        this.deleteUrl = null;\n        this.downloadUrl = null;\n        this.thumbnailUrl = null;\n        this.error = null;\n        this.$filesContainer = $fileUpload.find('[data-file-upload-role=files]');\n        this.$file = this.createUI();\n\n        const uid = [name, size, Math.floor(Math.random() * 2**32)].join('|');\n        this.fileListItem = {name, size, type, uid};\n        this.fileList = new FilesList($fileUpload);\n        this.fileList.add(this.fileListItem);\n\n        this.updateFileInfoUI();\n        this.$filesContainer.append(this.$file);\n        this.$file.fadeIn();\n    }\n\n    createUI() {\n        const $file = $(this.$filesContainer.data('templateFile'));\n        $file.find('[data-file-upload-role=file-status]').append($(this.$filesContainer.data('templateProcessing')));\n        $file.hide();\n        return $file;\n    }\n\n    updateProgress(progress) {\n        this.progress = Math.max(0, Math.min(progress, 1)) * 100;\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfo(file) {\n        this.downloadUrl = file.url || this.downloadUrl;\n        this.thumbnailUrl = file.thumbnailUrl || this.thumbnailUrl;\n        this.deleteUrl = file.deleteUrl || this.deleteUrl;\n        this.type = file.type || this.type;\n        this.replaceFileListItem(file);\n    }\n\n    replaceFileListItem(file) {\n        if (this.fileListItem) {\n            this.fileList.removeByUid(this.fileListItem.uid);\n            this.fileList.add(file);\n            this.fileListItem = null;\n        }\n    }\n\n    processing(file) {\n        this.updateFileInfo(file);\n        this.updateFileInfoUI();\n    }\n\n    failed(file) {\n        this.status = 'failed';\n        if (file && file.error) {\n            this.error = file.error;\n        }\n        const $error = $(this.$filesContainer.data('templateFailed'));\n        this.updateFileInfoUI($error);\n        this.$file.find('[data-file-upload-role=file-status]').html($error);\n        this.updateFileInfoUI();\n        this.removeFileListItem();\n    }\n\n    aborted() {\n        this.removeFileListItem();\n    }\n\n    removeFileListItem() {\n        if (this.fileListItem) {\n            this.fileList.removeByUid(this.fileListItem.uid);\n            this.fileListItem = null;\n        }\n    }\n\n    done(file) {\n        this.status = 'done';\n        this.updateFileInfo(file);\n        const $done = $(this.$filesContainer.data('templateDone'));\n        this.updateFileInfoUI($done);\n        this.$file.find('[data-file-upload-role=file-status]').html($done);\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfoUI(element) {\n        this.$file.attr('data-file-upload-status', this.status);\n        this.$file.attr('data-content-type', this.type);\n        this.$file.attr('title', this.name);\n\n        const $element = $(element || this.$file);\n        $element.find('[data-file-upload-role=file-name]').text(this.name);\n        $element.find('[data-file-upload-role=file-size]').text(this.formatBytes(this.size));\n        $element.find('[data-file-upload-role=file-progress-bar]')\n            .attr('aria-valuenow', Math.floor(this.progress))\n            .css('width', this.progress.toFixed(2) + '%');\n        if (this.error) {\n            $element.find('[data-file-upload-role=file-error]').text(this.error);\n        }\n        if (this.deleteUrl) {\n            $element.find('[data-file-upload-role=file-delete]').attr('data-url', this.deleteUrl);\n        }\n        if (this.downloadUrl) {\n            $element.find('[data-file-upload-role=file-download]').attr('href', this.downloadUrl);\n        }\n        if (this.thumbnailUrl) {\n            const $thumbnail = $element.find('[data-file-upload-role=file-thumbnail]');\n            if ($thumbnail.is('img')) {\n                $thumbnail.attr('src', this.thumbnailUrl);\n            } else if ($thumbnail.length > 0) {\n                const thumbnailAttributes = {};\n                $.each($thumbnail.get(0).attributes, (idx, attribute) => {\n                    thumbnailAttributes[attribute.name] = attribute.value;\n                });\n                $thumbnail.replaceWith($('<img>').attr(thumbnailAttributes).attr('src', this.thumbnailUrl));\n            }\n        }\n    }\n\n    formatBytes(bytes) {\n        const units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB'];\n        let unit;\n        for (let i = 0; i < units.length; i++) {\n            unit = units[i];\n            if (Math.abs(bytes) < 1024 || i === units.length - 1) {\n                break;\n            }\n            bytes = bytes / 1024;\n        }\n        return bytes.toFixed(2) + ' ' + unit;\n    }\n\n}\n\n\nexport default FileUpload;\n","import $ from 'jquery';\nimport 'blueimp-file-upload';\nimport {Buttons, FilesList, FileUpload} from './ui';\n\n\nfunction initializeControl(container) {\n    const $fileUpload = $(container);\n    if ($fileUpload.data('blueimpFileupload')) {\n        return;\n    }\n\n    const uniqueFilenames = {};\n    ($fileUpload.data('uniqueFilenames') || []).forEach((filename) => {\n        uniqueFilenames[filename] = true;\n    });\n\n    $fileUpload.fileupload({\n        url: $fileUpload.data('fileUploadUrl'),\n        dropZone: $fileUpload,\n        pasteZone: null,\n        dataType: 'json',\n        formData: [], // do not send other form data with file uploads\n        uniqueFilenames,\n        singleFileUploads: true,\n        maxChunkSize: 2 * 1024 * 1024,\n        limitConcurrentUploads: 3,\n        submit: () => {\n            return !$fileUpload.hasClass('disabled') && !$fileUpload.is(':disabled') && !$fileUpload.find('input[type=file]').prop('disabled');\n        },\n    });\n\n    const filesList = new FilesList($fileUpload);\n    const buttons = new Buttons($fileUpload);\n\n    // eslint-disable-next-line consistent-return\n    $fileUpload.on('fileuploadadd', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload = new FileUpload($fileUpload, data.files);\n        data.fileUpload.$file.data('upload', data);\n        buttons.refreshState();\n\n    // eslint-disable-next-line consistent-return\n    }).on('fileuploadprogress', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload.updateProgress(data.loaded / data.total);\n\n    }).on('fileuploadfail', (e, data) => {\n        if (!data.fileUpload) {\n            return;\n        }\n        if (data.errorThrown === 'abort') {\n            data.fileUpload.aborted();\n        } else {\n            data.fileUpload.failed();\n            buttons.refreshState();\n        }\n\n    }).on('fileuploaddone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n        } else {\n            data.fileUpload.done(file);\n        }\n        buttons.refreshState();\n\n    }).on('fileuploadchunkdone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n            buttons.refreshState();\n        } else {\n            data.fileUpload.processing(file);\n        }\n\n    }).on('fileuploadchunksend', (e, data) => {\n        return !data.fileUpload || data.fileUpload.status !== 'failed';\n\n    }).on('click', '[data-file-upload-role=file-delete]', function () {\n        const $this = $(this);\n        const $file = $this.closest('[data-file-upload-role=file]');\n        const upload = $file.data('upload');\n        if (upload) {\n            upload.abort();\n        }\n        const deleteUrl = $this.data('url');\n        if (deleteUrl) {\n            $.get(deleteUrl);\n            filesList.removeByDeleteUrl(deleteUrl);\n        }\n        $file.fadeOut(() => {\n            $file.remove();\n            buttons.refreshState();\n        });\n\n    });\n}\n\n\nfunction initializeForm(form) {\n    $(form)\n        .find('[data-file-upload-url]')\n        .each((idx, container) => {\n            initializeControl(container);\n        });\n}\n\n\nfunction initializeFileUploadControl(Nette) {\n    // Disable default browser drop event\n    $(document).on('drop dragover', (e) => {\n        e.preventDefault();\n    });\n\n    // Validation\n    Nette.validators.NepadaFileUploadControlValidationClientSide_noUploadInProgress = (element) => {\n        return $(element).closest('[data-file-upload-url]').find('[data-file-upload-status=processing] [data-file-upload-role=file-delete]').length === 0;\n    };\n\n    // Effective value\n    const originalGetEffectiveValue = Nette.getEffectiveValue;\n    Nette.getEffectiveValue = (elem, filter) => {\n        if (!elem || !elem.nodeName || elem.nodeName.toLowerCase() !== 'input' || !$(elem).data('files')) {\n            return originalGetEffectiveValue(elem, filter);\n        }\n        return $(elem).data('files');\n    };\n\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm(form);\n        initializeForm(form);\n    };\n}\n\n\nexport default initializeFileUploadControl;\n","import Nette from 'nette-forms';\nimport initializeFileUploadControl from './index';\n\ninitializeFileUploadControl(Nette);\n"],"names":["Button","$fileUpload","buttonSelector","targetSelector","_this","this","_classCallCheck","button","find","click","$","get","reverse","_createClass","key","value","toggleClass","length","Buttons","abortButton","deleteButton","refreshState","FilesList","dataAttribute","getInput","data","file","files","list","push","fileUrl","grep","url","deleteUrl","uid","FileUpload","name","size","type","each","index","status","progress","downloadUrl","thumbnailUrl","error","$filesContainer","$file","createUI","Math","floor","random","pow","join","fileListItem","fileList","add","updateFileInfoUI","append","fadeIn","hide","max","min","replaceFileListItem","removeByUid","updateFileInfo","$error","html","removeFileListItem","$done","element","attr","$element","text","formatBytes","css","toFixed","$thumbnail","is","thumbnailAttributes","attributes","idx","attribute","replaceWith","bytes","unit","units","i","abs","initializeForm","form","container","uniqueFilenames","forEach","filename","fileupload","dropZone","pasteZone","dataType","formData","singleFileUploads","maxChunkSize","limitConcurrentUploads","submit","hasClass","prop","filesList","buttons","on","e","isDefaultPrevented","fileUpload","updateProgress","loaded","total","errorThrown","aborted","failed","result","done","processing","$this","closest","upload","abort","removeByDeleteUrl","fadeOut","remove","initializeControl","Nette","document","preventDefault","validators","NepadaFileUploadControlValidationClientSide_noUploadInProgress","originalGetEffectiveValue","getEffectiveValue","elem","filter","nodeName","toLowerCase","originalInitForm","initForm","initializeFileUploadControl"],"mappings":"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"}