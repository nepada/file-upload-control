{"version":3,"file":"file-upload-control.min.js","sources":["../../src/assets/js/ui/Button.js","../../src/assets/js/ui/Buttons.js","../../src/assets/js/ui/FilesList.js","../../src/assets/js/ui/FileUpload.js","../../src/assets/js/index.js","../../src/assets/js/file-upload-control.js"],"sourcesContent":["import $ from 'jquery';\n\nclass Button {\n\n    constructor($fileUpload, buttonSelector, targetSelector) {\n        this.$fileUpload = $fileUpload;\n        this.button = $fileUpload.find(buttonSelector);\n        this.targetSelector = targetSelector;\n\n        this.button.click(() => {\n            // Trigger click from the newest to oldest to mitigate race condition bug with limitConcurrentUploads\n            $(this.$fileUpload.find(this.targetSelector).get().reverse()).click();\n        });\n    }\n\n    refreshState() {\n        this.button.toggleClass('disabled', this.$fileUpload.find(this.targetSelector).length === 0);\n    }\n\n}\n\n\nexport default Button;\n","import Button from './Button';\n\n\nclass Buttons {\n\n    constructor($fileUpload) {\n        this.abortButton = new Button($fileUpload, '[data-file-upload-role=abort]', '[data-file-upload-status=processing] [data-file-upload-role=file-delete]');\n        this.deleteButton = new Button($fileUpload, '[data-file-upload-role=delete]', '[data-file-upload-role=file-delete]');\n    }\n\n    refreshState() {\n        this.abortButton.refreshState();\n        this.deleteButton.refreshState();\n    }\n\n}\n\n\nexport default Buttons;\n","import $ from 'jquery';\n\nclass FilesList {\n\n    constructor($fileUpload) {\n        this.$fileUpload = $fileUpload;\n        this.dataAttribute = 'files';\n    }\n\n    getInput() {\n        // We need to do a lookup every time, because file input is replaced after each upload\n        return this.$fileUpload.find('input[type=file]');\n    }\n\n    list() {\n        return this.getInput().data(this.dataAttribute) || [];\n    }\n\n    add(file) {\n        const files = this.list();\n        files.push(file);\n        this.getInput().data(this.dataAttribute, files);\n    }\n\n    remove(fileUrl) {\n        this.getInput().data(this.dataAttribute, $.grep(\n            this.list(),\n            (file) => {\n                return file.url !== fileUrl;\n            },\n        ));\n    }\n\n}\n\n\nexport default FilesList;\n","import $ from 'jquery';\n\nclass FileUpload {\n\n    constructor($fileUpload, files) {\n        let name = '';\n        let size = 0;\n        let type = '';\n        $.each(files, (index, file) => {\n            name = name + (index ? ', ' : '') + file.name;\n            size = size + file.size;\n            type = type || file.type;\n            if (type !== file.type) {\n                type = type + ', ' + file.type;\n            }\n        });\n\n        this.name = name;\n        this.size = size;\n        this.type = type;\n        this.status = 'processing';\n        this.progress = 0;\n        this.deleteUrl = null;\n        this.downloadUrl = null;\n        this.thumbnailUrl = null;\n        this.error = null;\n        this.$filesContainer = $fileUpload.find('[data-file-upload-role=files]');\n        this.$file = this.createUI();\n\n        this.updateFileInfoUI();\n        this.$filesContainer.append(this.$file);\n        this.$file.fadeIn();\n    }\n\n    createUI() {\n        const $file = $(this.$filesContainer.data('templateFile'));\n        $file.find('[data-file-upload-role=file-status]').append($(this.$filesContainer.data('templateProcessing')));\n        $file.hide();\n        return $file;\n    }\n\n    updateProgress(progress) {\n        this.progress = Math.max(0, Math.min(progress, 1)) * 100;\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfo(file) {\n        this.downloadUrl = file.url || this.downloadUrl;\n        this.thumbnailUrl = file.thumbnailUrl || this.thumbnailUrl;\n        this.deleteUrl = file.deleteUrl || this.deleteUrl;\n        this.type = file.type || this.type;\n    }\n\n    processing(file) {\n        this.updateFileInfo(file);\n        this.updateFileInfoUI();\n    }\n\n    failed(file) {\n        this.status = 'failed';\n        if (file && file.error) {\n            this.error = file.error;\n        }\n        const $error = $(this.$filesContainer.data('templateFailed'));\n        this.updateFileInfoUI($error);\n        this.$file.find('[data-file-upload-role=file-status]').html($error);\n        this.updateFileInfoUI();\n    }\n\n    done(file) {\n        this.status = 'done';\n        this.updateFileInfo(file);\n        const $done = $(this.$filesContainer.data('templateDone'));\n        this.updateFileInfoUI($done);\n        this.$file.find('[data-file-upload-role=file-status]').html($done);\n        this.updateFileInfoUI();\n    }\n\n    updateFileInfoUI(element) {\n        this.$file.attr('data-file-upload-status', this.status);\n        this.$file.attr('data-content-type', this.type);\n        this.$file.attr('title', this.name);\n\n        const $element = $(element || this.$file);\n        $element.find('[data-file-upload-role=file-name]').text(this.name);\n        $element.find('[data-file-upload-role=file-size]').text(this.formatBytes(this.size));\n        $element.find('[data-file-upload-role=file-progress-bar]')\n            .attr('aria-valuenow', Math.floor(this.progress))\n            .css('width', this.progress.toFixed(2) + '%');\n        if (this.error) {\n            $element.find('[data-file-upload-role=file-error]').text(this.error);\n        }\n        if (this.deleteUrl) {\n            $element.find('[data-file-upload-role=file-delete]').attr('data-url', this.deleteUrl);\n        }\n        if (this.downloadUrl) {\n            $element.find('[data-file-upload-role=file-download]').attr('href', this.downloadUrl);\n        }\n        if (this.thumbnailUrl) {\n            const $thumbnail = $element.find('[data-file-upload-role=file-thumbnail]');\n            if ($thumbnail.is('img')) {\n                $thumbnail.attr('src', this.thumbnailUrl);\n            } else if ($thumbnail.length > 0) {\n                const thumbnailAttributes = {};\n                $.each($thumbnail.get(0).attributes, (idx, attribute) => {\n                    thumbnailAttributes[attribute.name] = attribute.value;\n                });\n                $thumbnail.replaceWith($('<img>').attr(thumbnailAttributes).attr('src', this.thumbnailUrl));\n            }\n        }\n    }\n\n    formatBytes(bytes) {\n        const units = ['B', 'kB', 'MB', 'GB', 'TB', 'PB'];\n        let unit;\n        for (let i = 0; i < units.length; i++) {\n            unit = units[i];\n            if (Math.abs(bytes) < 1024 || i === units.length - 1) {\n                break;\n            }\n            bytes = bytes / 1024;\n        }\n        return bytes.toFixed(2) + ' ' + unit;\n    }\n\n}\n\n\nexport default FileUpload;\n","import $ from 'jquery';\nimport 'blueimp-file-upload';\nimport {Buttons, FilesList, FileUpload} from './ui';\n\n\nfunction initializeControl(container) {\n    const $fileUpload = $(container);\n    if ($fileUpload.data('blueimpFileupload')) {\n        return;\n    }\n\n    const uniqueFilenames = {};\n    ($fileUpload.data('uniqueFilenames') || []).forEach((filename) => {\n        uniqueFilenames[filename] = true;\n    });\n\n    $fileUpload.fileupload({\n        url: $fileUpload.data('fileUploadUrl'),\n        dropZone: $fileUpload,\n        pasteZone: null,\n        dataType: 'json',\n        formData: [], // do not send other form data with file uploads\n        uniqueFilenames,\n        singleFileUploads: true,\n        maxChunkSize: 2 * 1024 * 1024,\n        limitConcurrentUploads: 3,\n        submit: () => {\n            return !$fileUpload.hasClass('disabled') && !$fileUpload.is(':disabled') && !$fileUpload.find('input[type=file]').prop('disabled');\n        },\n    });\n\n    const filesList = new FilesList($fileUpload);\n    const buttons = new Buttons($fileUpload);\n\n    // eslint-disable-next-line consistent-return\n    $fileUpload.on('fileuploadadd', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload = new FileUpload($fileUpload, data.files);\n        data.fileUpload.$file.data('upload', data);\n        buttons.refreshState();\n\n    // eslint-disable-next-line consistent-return\n    }).on('fileuploadprogress', (e, data) => {\n        if (e.isDefaultPrevented()) {\n            return false;\n        }\n\n        data.fileUpload.updateProgress(data.loaded / data.total);\n\n    }).on('fileuploadfail', (e, data) => {\n        if (data.fileUpload && data.errorThrown !== 'abort') {\n            data.fileUpload.failed();\n            buttons.refreshState();\n        }\n\n    }).on('fileuploaddone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n        } else {\n            data.fileUpload.done(file);\n            filesList.add(file);\n        }\n        buttons.refreshState();\n\n    }).on('fileuploadchunkdone', (e, data) => {\n        const file = data.result.files[0];\n        if (file.error) {\n            data.fileUpload.failed(file);\n            buttons.refreshState();\n        } else {\n            data.fileUpload.processing(file);\n        }\n\n    }).on('fileuploadchunksend', (e, data) => {\n        return !data.fileUpload || data.fileUpload.status !== 'failed';\n\n    }).on('click', '[data-file-upload-role=file-delete]', function () {\n        const $this = $(this);\n        const $file = $this.closest('[data-file-upload-role=file]');\n        const upload = $file.data('upload');\n        if (upload) {\n            upload.abort();\n        }\n        if ($this.is('[data-url]')) {\n            $.get($this.data('url'));\n        }\n        const fileUrl = $file.find('[data-file-upload-role=file-download]').attr('href');\n        filesList.remove(fileUrl);\n        $file.fadeOut(() => {\n            $file.remove();\n            buttons.refreshState();\n        });\n\n    });\n}\n\n\nfunction initializeForm(form) {\n    $(form)\n        .find('[data-file-upload-url]')\n        .each((idx, container) => {\n            initializeControl(container);\n        });\n}\n\n\nfunction initializeFileUploadControl(Nette) {\n    // Disable default browser drop event\n    $(document).on('drop dragover', (e) => {\n        e.preventDefault();\n    });\n\n    // Effective value\n    const originalGetEffectiveValue = Nette.getEffectiveValue;\n    Nette.getEffectiveValue = (elem, filter) => {\n        if (!elem || !elem.nodeName || elem.nodeName.toLowerCase() !== 'input' || !$(elem).data('files')) {\n            return originalGetEffectiveValue(elem, filter);\n        }\n        return $(elem).data('files');\n    };\n\n    // Initialize all forms on document ready\n    $(() => {\n        $('form').each((idx, form) => {\n            initializeForm(form);\n        });\n    });\n\n    // Tap into Nette.initForm() to provide AJAX snippet support via e.g. Naja\n    const originalInitForm = Nette.initForm;\n    Nette.initForm = (form) => {\n        originalInitForm(form);\n        initializeForm(form);\n    };\n}\n\n\nexport default initializeFileUploadControl;\n","import Nette from 'nette-forms';\nimport initializeFileUploadControl from './index';\n\ninitializeFileUploadControl(Nette);\n"],"names":["Button","$fileUpload","buttonSelector","targetSelector","button","find","click","$","_this","get","reverse","toggleClass","this","length","Buttons","abortButton","deleteButton","refreshState","FilesList","dataAttribute","getInput","data","file","files","list","push","fileUrl","grep","url","FileUpload","name","size","type","each","index","status","progress","deleteUrl","downloadUrl","thumbnailUrl","error","$filesContainer","$file","createUI","updateFileInfoUI","append","fadeIn","hide","Math","max","min","updateFileInfo","$error","html","$done","element","attr","$element","text","formatBytes","floor","css","toFixed","$thumbnail","is","thumbnailAttributes","attributes","idx","attribute","value","replaceWith","bytes","unit","units","i","abs","initializeForm","form","container","uniqueFilenames","forEach","filename","fileupload","dropZone","pasteZone","dataType","formData","singleFileUploads","maxChunkSize","limitConcurrentUploads","submit","hasClass","prop","filesList","buttons","on","e","isDefaultPrevented","fileUpload","updateProgress","loaded","total","errorThrown","failed","result","done","add","processing","$this","closest","upload","abort","remove","fadeOut","initializeControl","Nette","document","preventDefault","originalGetEffectiveValue","getEffectiveValue","elem","filter","nodeName","toLowerCase","originalInitForm","initForm","initializeFileUploadControl"],"mappings":"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"}